<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coulee.foundations.configserver.dao.ConfigUserMapper">
	<resultMap id="BaseResultMap" type="com.coulee.foundations.configserver.entity.ConfigUser">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="UUID" jdbcType="VARCHAR" property="uuid" />
		<result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
		<result column="USER_PASSWORD" jdbcType="VARCHAR" property="userPassword" />
		<result column="IS_ADMIN" jdbcType="INTEGER" property="isAdmin" />
		<result column="USER_DESC" jdbcType="VARCHAR" property="userDesc" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, UUID, USER_NAME, USER_PASSWORD, IS_ADMIN, USER_DESC
	</sql>
	<select id="findById" parameterType="Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from PT_CONFIG_USER
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="delete" parameterType="Integer">
		delete from PT_CONFIG_USER
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="add" parameterType="com.coulee.foundations.configserver.entity.ConfigUser"  useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
		insert into PT_CONFIG_USER (ID, UUID, USER_NAME,
		USER_PASSWORD, IS_ADMIN, USER_DESC)
		values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
		#{userPassword,jdbcType=VARCHAR}, #{isAdmin,jdbcType=INTEGER}, #{userDesc,jdbcType=VARCHAR})
	</insert>

	<select id="lastId" resultType="java.lang.Integer">
		select last_insert_rowid() from PT_CONFIG_USER
	</select>
	<update id="update" parameterType="com.coulee.foundations.configserver.entity.ConfigUser">
		update PT_CONFIG_USER
		<set>
			<if test="uuid != null">
				UUID = #{uuid,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				USER_NAME = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				USER_PASSWORD = #{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="isAdmin != null">
				IS_ADMIN = #{isAdmin,jdbcType=INTEGER},
			</if>
			<if test="userDesc != null">
				USER_DESC = #{userDesc,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<select id="findByParams" parameterType="java.util.Map" resultMap="BaseResultMap">
		select ID, UUID, USER_NAME, IS_ADMIN, USER_DESC from PT_CONFIG_USER
		<where>
			<if test="params != null">
				<if test="params.uuid != null and params.uuid !=''">
					and UUID like '%' || #{params.uuid,jdbcType=VARCHAR} || '%'
				</if>
				<if test="params.userName != null and params.userName !=''">
					and USER_NAME = #{params.userName,jdbcType=VARCHAR}
				</if>
				<if test="params.isAdmin != null">
					and IS_ADMIN = #{params.isAdmin,jdbcType=INTEGER}
				</if>
				<if test="params.id != null">
					and ID = #{params.id,jdbcType=INTEGER}
				</if>
				<if test="params.userDesc != null and params.userDesc !=''">
					and USER_DESC = #{params.userDesc,jdbcType=VARCHAR}
				</if>
			</if>
		</where>
	</select>
	<select id="findByUuid" parameterType="String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from PT_CONFIG_USER
		where UUID = #{uuid,jdbcType=VARCHAR}
	</select>
</mapper>