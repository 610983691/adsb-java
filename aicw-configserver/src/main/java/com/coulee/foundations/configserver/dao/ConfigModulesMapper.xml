<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coulee.foundations.configserver.dao.ConfigModulesMapper">
  <resultMap id="BaseResultMap" type="com.coulee.foundations.configserver.entity.ConfigModules">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="PRODUCT_ID" jdbcType="INTEGER" property="productId" />
    <result column="MODULE_NAME" jdbcType="VARCHAR" property="moduleName" />
    <result column="MODULE_MARK" jdbcType="VARCHAR" property="moduleMark" />
    <result column="IS_EXTENDS" jdbcType="INTEGER" property="isExtends" />
    <result column="PRODUCT_NAME" jdbcType="VARCHAR" property="productName" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, PRODUCT_ID, MODULE_NAME, MODULE_MARK, IS_EXTENDS
  </sql>
  <select id="findById" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PT_CONFIG_MODULES
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="Integer">
    delete from PT_CONFIG_MODULES
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="add" parameterType="com.coulee.foundations.configserver.entity.ConfigModules">
    insert into PT_CONFIG_MODULES (ID, PRODUCT_ID, MODULE_NAME, 
      MODULE_MARK, IS_EXTENDS)
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{moduleName,jdbcType=VARCHAR}, 
      #{moduleMark,jdbcType=VARCHAR}, #{isExtends,jdbcType=INTEGER})
  </insert>
  <update id="update" parameterType="com.coulee.foundations.configserver.entity.ConfigModules">
    update PT_CONFIG_MODULES
    <set>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=INTEGER},
      </if>
      <if test="moduleName != null">
        MODULE_NAME = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleMark != null">
        MODULE_MARK = #{moduleMark,jdbcType=VARCHAR},
      </if>
      <if test="isExtends != null">
        IS_EXTENDS = #{isExtends,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="findByParams" parameterType="java.util.Map" resultMap="BaseResultMap">
    select A.*, B.PRODUCT_NAME from PT_CONFIG_MODULES A, PT_CONFIG_PRODUCT B 
    <where>
      A.PRODUCT_ID = B.ID
      <if test="params != null">
        <if test="params.productId != null">
          and PRODUCT_ID = #{params.productId,jdbcType=INTEGER}
        </if>
        <if test="params.moduleName != null and params.moduleName !=''">
          and MODULE_NAME = #{params.moduleName,jdbcType=VARCHAR}
        </if>
        <if test="params.moduleMark != null and params.moduleMark !=''">
          and MODULE_MARK = #{params.moduleMark,jdbcType=VARCHAR}
        </if>
        <if test="params.isExtends != null">
          and IS_EXTENDS = #{params.isExtends,jdbcType=INTEGER}
        </if>
        <if test="params.id != null">
          and ID = #{params.id,jdbcType=INTEGER}
        </if>
      </if>
    </where>
  </select>
  
  <delete id="deleteByProductId" parameterType="Integer">
    delete from PT_CONFIG_MODULES
    where PRODUCT_ID = #{productId,jdbcType=INTEGER}
  </delete>
  
</mapper>