<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coulee.foundations.configserver.dao.ConfigTemplateItemsMapper">
  <resultMap id="BaseResultMap" type="com.coulee.foundations.configserver.entity.ConfigTemplateItems">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="TEMPLATE_ID" jdbcType="INTEGER" property="templateId" />
    <result column="ITEM_DESC" jdbcType="VARCHAR" property="itemDesc" />
    <result column="ITEM_IS_CRYPT" jdbcType="INTEGER" property="itemIsCrypt" />
    <result column="ITEM_KEY" jdbcType="VARCHAR" property="itemKey" />
    <result column="ITEM_VALUE" jdbcType="VARCHAR" property="itemValue" />
    <result column="ITEM_SEQ" jdbcType="INTEGER" property="itemSeq" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, TEMPLATE_ID, ITEM_DESC, ITEM_IS_CRYPT, ITEM_KEY, ITEM_VALUE, ITEM_SEQ
  </sql>
  <select id="findById" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PT_CONFIG_TEMPLATE_ITEMS
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="Integer">
    delete from PT_CONFIG_TEMPLATE_ITEMS
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="add" parameterType="com.coulee.foundations.configserver.entity.ConfigTemplateItems">
    insert into PT_CONFIG_TEMPLATE_ITEMS (ID, TEMPLATE_ID, ITEM_DESC, 
      ITEM_IS_CRYPT, ITEM_KEY, ITEM_VALUE, 
      ITEM_SEQ)
    values (#{id,jdbcType=INTEGER}, #{templateId,jdbcType=INTEGER}, #{itemDesc,jdbcType=VARCHAR}, 
      #{itemIsCrypt,jdbcType=INTEGER}, #{itemKey,jdbcType=VARCHAR}, #{itemValue,jdbcType=VARCHAR}, 
      #{itemSeq,jdbcType=INTEGER})
  </insert>
  <update id="update" parameterType="com.coulee.foundations.configserver.entity.ConfigTemplateItems">
    update PT_CONFIG_TEMPLATE_ITEMS
    <set>
      <if test="templateId != null">
        TEMPLATE_ID = #{templateId,jdbcType=INTEGER},
      </if>
      <if test="itemDesc != null">
        ITEM_DESC = #{itemDesc,jdbcType=VARCHAR},
      </if>
      <if test="itemIsCrypt != null">
        ITEM_IS_CRYPT = #{itemIsCrypt,jdbcType=INTEGER},
      </if>
      <if test="itemKey != null">
        ITEM_KEY = #{itemKey,jdbcType=VARCHAR},
      </if>
      <if test="itemValue != null">
        ITEM_VALUE = #{itemValue,jdbcType=VARCHAR},
      </if>
      <if test="itemSeq != null">
        ITEM_SEQ = #{itemSeq,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="findByParams" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PT_CONFIG_TEMPLATE_ITEMS
    <where>
      <if test="params != null">
        <if test="params.templateId != null">
          and TEMPLATE_ID = #{params.templateId,jdbcType=INTEGER}
        </if>
        <if test="params.itemDesc != null and params.itemDesc !=''">
          and ITEM_DESC = #{params.itemDesc,jdbcType=VARCHAR}
        </if>
        <if test="params.itemIsCrypt != null">
          and ITEM_IS_CRYPT = #{params.itemIsCrypt,jdbcType=INTEGER}
        </if>
        <if test="params.itemKey != null and params.itemKey !=''">
          and ITEM_KEY = #{params.itemKey,jdbcType=VARCHAR}
        </if>
        <if test="params.itemValue != null and params.itemValue !=''">
          and ITEM_VALUE = #{params.itemValue,jdbcType=VARCHAR}
        </if>
        <if test="params.itemSeq != null">
          and ITEM_SEQ = #{params.itemSeq,jdbcType=INTEGER}
        </if>
        <if test="params.id != null">
          and ID = #{params.id,jdbcType=INTEGER}
        </if>
      </if>
    </where>
    order by ITEM_SEQ
  </select>
  
  <select id="findByParamsOrderBySEQ" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PT_CONFIG_TEMPLATE_ITEMS
    <where>
      <if test="params != null">
        <if test="params.templateId != null">
          and TEMPLATE_ID = #{params.templateId,jdbcType=INTEGER}
        </if>
        <if test="params.itemDesc != null and params.itemDesc !=''">
          and ITEM_DESC = #{params.itemDesc,jdbcType=VARCHAR}
        </if>
        <if test="params.itemIsCrypt != null">
          and ITEM_IS_CRYPT = #{params.itemIsCrypt,jdbcType=INTEGER}
        </if>
        <if test="params.itemKey != null and params.itemKey !=''">
          and ITEM_KEY = #{params.itemKey,jdbcType=VARCHAR}
        </if>
        <if test="params.itemValue != null and params.itemValue !=''">
          and ITEM_VALUE = #{params.itemValue,jdbcType=VARCHAR}
        </if>
        <if test="params.itemSeq != null">
          and ITEM_SEQ = #{params.itemSeq,jdbcType=INTEGER}
        </if>
        <if test="params.id != null">
          and ID = #{params.id,jdbcType=INTEGER}
        </if>
      </if>
          order by item_seq asc
    </where>
  </select>
  
  <delete id="deleteByTemplateId" parameterType="Integer">
    delete from PT_CONFIG_TEMPLATE_ITEMS
    where TEMPLATE_ID = #{templateId,jdbcType=INTEGER}
  </delete>
  
</mapper>